/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.LabAssistantRole;

import Business.WorkQueue.DiagnosticsWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author saikr
 */
public class ProcessDiagnostics extends javax.swing.JPanel {

    JPanel userProcessContainer;
    DiagnosticsWorkRequest request;
    private String others;

  
    public ProcessDiagnostics(JPanel userProcessContainer, DiagnosticsWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        initlables();

    }

    public void initlables() {
   
        txt_bloodtyping.setVisible(false);
        cb_bloodTyping.setVisible(false);
        txt_survival.setVisible(false);
        cb_survival.setVisible(false);
        txt_antibodies.setVisible(false);
        cb_reactiveAntiBodies.setVisible(false);
        lbl_wbcCount.setVisible(false);
        lbl_liver.setVisible(false);
        lbl_kidney.setVisible(false);
        cb_wbc.setVisible(false);
        cb_liver.setVisible(false);
        cb_kidney.setVisible(false);
        txt_random1.setVisible(false);
        cb_random1.setVisible(false);
        txt_random2.setVisible(false);
        cb_random2.setVisible(false);
        txt_random2.setVisible(false);
        cb_random2.setVisible(false);
        txt_random3.setVisible(false);
        cb_random3.setVisible(false);
        
        List<JLabel> labels = Arrays.asList(txt_random1, txt_random2, txt_random3);
        List<JComboBox> cboxes = Arrays.asList(cb_random1, cb_random2, cb_random3);
        int counter=0;
        
        System.out.println("Test Array in lab process"+request.getTests());
        for (String s : request.getTests()) {          
            
            if (s.equalsIgnoreCase("blood typing")) {
                txt_bloodtyping.setVisible(true);
                cb_bloodTyping.setVisible(true);    
            }
            if (s.equalsIgnoreCase("survival capability")) {
                txt_antibodies.setVisible(true);
                cb_reactiveAntiBodies.setVisible(true);
            }
            if (s.equalsIgnoreCase("reactive antibodies")) {
                txt_survival.setVisible(true);
                cb_survival.setVisible(true);
            }
            if (s.equalsIgnoreCase("wbc count")) {
                lbl_wbcCount.setVisible(true);
                cb_wbc.setVisible(true);
            }
            if (s.equalsIgnoreCase("liver culture")) {
                lbl_liver.setVisible(true);
                cb_liver.setVisible(true);
            }
            if (s.equalsIgnoreCase("kidney culture")) {
                lbl_kidney.setVisible(true);
                cb_kidney.setVisible(true);
            }           
            
            if (!(s.equalsIgnoreCase("kidney culture")||s.equalsIgnoreCase("liver culture")||s.equalsIgnoreCase("wbc count")||s.equalsIgnoreCase("blood typing") || s.equalsIgnoreCase("survival capability") || s.equalsIgnoreCase("reactive antibodies"))) {
                labels.get(counter).setVisible(true);
                labels.get(counter).setText(s);
                cboxes.get(counter).setVisible(true);
                //others=s;
                counter++;

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_genres = new javax.swing.JButton();
        txt_result = new javax.swing.JLabel();
        txt_resultcomment = new javax.swing.JTextField();
        btn_back = new javax.swing.JButton();
        txt_bloodtyping = new javax.swing.JLabel();
        txt_survival = new javax.swing.JLabel();
        txt_antibodies = new javax.swing.JLabel();
        cb_bloodTyping = new javax.swing.JComboBox();
        cb_survival = new javax.swing.JComboBox();
        cb_reactiveAntiBodies = new javax.swing.JComboBox();
        txt_random1 = new javax.swing.JLabel();
        cb_random1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        lbl_wbcCount = new javax.swing.JLabel();
        lbl_liver = new javax.swing.JLabel();
        lbl_kidney = new javax.swing.JLabel();
        cb_wbc = new javax.swing.JComboBox<>();
        cb_liver = new javax.swing.JComboBox<>();
        cb_kidney = new javax.swing.JComboBox<>();
        cb_random2 = new javax.swing.JComboBox();
        txt_random2 = new javax.swing.JLabel();
        cb_random3 = new javax.swing.JComboBox();
        txt_random3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));

        btn_genres.setBackground(new java.awt.Color(204, 204, 204));
        btn_genres.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_genres.setForeground(new java.awt.Color(255, 0, 51));
        btn_genres.setText("Generate Result");
        btn_genres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_genresActionPerformed(evt);
            }
        });

        txt_result.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_result.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_result.setText("Result:");

        txt_resultcomment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_back.setBackground(new java.awt.Color(204, 204, 204));
        btn_back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_back.setForeground(new java.awt.Color(255, 0, 51));
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        txt_bloodtyping.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_bloodtyping.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_bloodtyping.setText("Blood Typing");

        txt_survival.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_survival.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_survival.setText("Survival Capability");

        txt_antibodies.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_antibodies.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_antibodies.setText("Reactive Antibodies");

        cb_bloodTyping.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_bloodTyping.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));

        cb_survival.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_survival.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cb_survival.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_survivalActionPerformed(evt);
            }
        });

        cb_reactiveAntiBodies.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_reactiveAntiBodies.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "10%-20%", "20%-40%", "40%-60%", "60%-80%", ">80%", " " }));
        cb_reactiveAntiBodies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_reactiveAntiBodiesActionPerformed(evt);
            }
        });

        txt_random1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_random1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_random1.setText("Random:");

        cb_random1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_random1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cb_random1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_random1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("LAB TESTS");

        lbl_wbcCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_wbcCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_wbcCount.setText("WBC Count");

        lbl_liver.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_liver.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_liver.setText("Liver Culture");

        lbl_kidney.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_kidney.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_kidney.setText("Kidney Culture :");

        cb_wbc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_wbc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Normal ", "Abnormal" }));

        cb_liver.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_liver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Normal ", "Abnormal" }));

        cb_kidney.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_kidney.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Normal ", "Abnormal" }));

        cb_random2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_random2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cb_random2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_random2ActionPerformed(evt);
            }
        });

        txt_random2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_random2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_random2.setText("Random:");

        cb_random3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_random3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cb_random3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_random3ActionPerformed(evt);
            }
        });

        txt_random3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_random3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_random3.setText("Random:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_survival)
                            .addComponent(txt_antibodies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_bloodtyping, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_wbcCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_liver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_kidney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_random1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_random2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_random3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cb_liver, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_kidney, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_bloodTyping, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_survival, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_reactiveAntiBodies, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_wbc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_random1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_random2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_random3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_resultcomment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_genres)
                .addGap(405, 405, 405))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_bloodtyping)
                    .addComponent(cb_bloodTyping, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_survival)
                    .addComponent(cb_survival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_antibodies)
                    .addComponent(cb_reactiveAntiBodies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_wbcCount)
                    .addComponent(cb_wbc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_liver)
                    .addComponent(cb_liver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_kidney)
                    .addComponent(cb_kidney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_random1)
                    .addComponent(cb_random1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_random2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_random2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_random3)
                    .addComponent(cb_random3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_resultcomment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_result))
                .addGap(34, 34, 34)
                .addComponent(btn_genres, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DiagnosticsWorkArea dwjp = (DiagnosticsWorkArea) component;
        dwjp.initWorktable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_genresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_genresActionPerformed
        request.setTestResult(txt_resultcomment.getText());
        String test1 = cb_bloodTyping.getSelectedItem().toString();    
        String test2 = cb_survival.getSelectedItem().toString();
        String test3 = cb_reactiveAntiBodies.getSelectedItem().toString();
        String test4 = cb_wbc.getSelectedItem().toString();
        String test5 = cb_liver.getSelectedItem().toString();
        String test6 = cb_kidney.getSelectedItem().toString();
        String test7 = cb_random1.getSelectedItem().toString();
        String test8 = cb_random2.getSelectedItem().toString();
        String test9 = cb_random3.getSelectedItem().toString();
        
        ArrayList<String> sample= new ArrayList<>();
     
        if(!(test1=="-"||test1.isEmpty()||test1.isEmpty())){
            sample.add(test1);
        }
        if(!(test2=="-"||test2.isEmpty()||test2.isEmpty())){
            sample.add(test2);
        }
        if(!(test3=="-"||test3.isEmpty()||test3.isEmpty())){
            sample.add(test3);
        }
        if(!(test4=="-"||test4.isEmpty()||test4.isEmpty())){
            sample.add(test4);
        }
        if(!(test5=="-"||test5.isEmpty()||test5.isEmpty())){
            sample.add(test5);
        }
        if(!(test6=="-"||test6.isEmpty()||test6.isEmpty())){
            sample.add(test6);
        }
        if(!(test7=="-"||test7.isEmpty()||test7.isEmpty())){
            sample.add(test7);
        }
        if(!(test8=="-"||test8.isEmpty()||test8.isEmpty())){
            sample.add(test8);
        }
        if(!(test9=="-"||test9.isEmpty()||test9.isEmpty())){
            sample.add(test9);
        }
        
        boolean check;
        check=sample.size()>0;
        if(!check){
            JOptionPane.showMessageDialog(null, "Please perform the tests for proper evaluation");
            return;
        }
        request.setTestData(sample);
        request.setStatus("Completed");
        JOptionPane.showMessageDialog(null,"Report has been sent");
        System.out.println(request.getTestData()+"This is test data");
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DiagnosticsWorkArea dwjp = (DiagnosticsWorkArea) component;
        dwjp.initWorktable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_genresActionPerformed

    private void cb_reactiveAntiBodiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_reactiveAntiBodiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_reactiveAntiBodiesActionPerformed

    private void cb_random1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_random1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_random1ActionPerformed

    private void cb_survivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_survivalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_survivalActionPerformed

    private void cb_random2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_random2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_random2ActionPerformed

    private void cb_random3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_random3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_random3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_genres;
    private javax.swing.JComboBox cb_bloodTyping;
    private javax.swing.JComboBox<String> cb_kidney;
    private javax.swing.JComboBox<String> cb_liver;
    private javax.swing.JComboBox cb_random1;
    private javax.swing.JComboBox cb_random2;
    private javax.swing.JComboBox cb_random3;
    private javax.swing.JComboBox cb_reactiveAntiBodies;
    private javax.swing.JComboBox cb_survival;
    private javax.swing.JComboBox<String> cb_wbc;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lbl_kidney;
    private javax.swing.JLabel lbl_liver;
    private javax.swing.JLabel lbl_wbcCount;
    private javax.swing.JLabel txt_antibodies;
    private javax.swing.JLabel txt_bloodtyping;
    private javax.swing.JLabel txt_random1;
    private javax.swing.JLabel txt_random2;
    private javax.swing.JLabel txt_random3;
    private javax.swing.JLabel txt_result;
    private javax.swing.JTextField txt_resultcomment;
    private javax.swing.JLabel txt_survival;
    // End of variables declaration//GEN-END:variables
}
